% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cdda.indep.R, R/plot.cdda.indep.R,
%   R/summary.cdda.indep.R
\name{cdda.indep}
\alias{cdda.indep}
\alias{print.cdda.indep}
\alias{plot.cddaindep}
\alias{plot.cdda.indep}
\alias{summary.cdda.indep}
\title{Conditional Direction Dependence Analysis: Independence Properties}
\usage{
cdda.indep(
  formula = NULL,
  pred = NULL,
  mod = NULL,
  modval = NULL,
  data = list(),
  hetero = FALSE,
  diff = FALSE,
  nlfun = NULL,
  hsic.method = "gamma",
  B = 200,
  boot.type = "perc",
  conf.level = 0.95,
  parallelize = FALSE,
  cores = 1,
  ...
)

\method{print}{cdda.indep}(x, ...)

\method{plot}{cdda.indep}(obj = NULL, stat = NULL, ylim = NULL)

\method{summary}{cdda.indep}(
  cdda.output,
  nlfun = FALSE,
  hetero = FALSE,
  hsic = TRUE,
  hsic.diff = FALSE,
  dcor = TRUE,
  dcor.diff = FALSE,
  mi.diff = FALSE,
  ...
)
}
\arguments{
\item{formula}{Symbolic formula of the model to be tested or an \code{lm} object.}

\item{pred}{A character indicating the variable name of the predictor which serves as the outcome in the alternative model.}

\item{mod}{A character indicating the variable name of the moderator.}

\item{modval}{Characters or a numeric sequence specifying the moderator
values used in post-hoc probing. Possible characters include
\code{c("mean", "median", "JN")}.\code{modval = "mean"}
tests the interaction effect at the moderator values
\code{M â€“ 1SD}, \code{M}, and \code{M + 1SD};
\code{modval = "median"} uses \code{Q1}, \code{Md},
and \code{Q3}. The Johnson-Neyman approach is applied
when \code{modval = "JN"} with conditional effect being
evaluated at the boundary values of the significance
regions. When a numeric sequence is specified,the
pick-a-point approach is used for the selected numeric values.}

\item{data}{A required data frame containing the variables in the model.}

\item{hetero}{logical, default is \code{FALSE}, includes Breusch-Pagan Homoscedasticity test}

\item{diff}{A logical value indicating whether differences in HSIC, dCor, and MI values should be computed. Bootstrap confidence intervals are computed using B bootstrap samples.}

\item{nlfun}{logical, default is \code{FALSE}, includes non-linear correlation test}

\item{hsic.method}{A character indicating the inference method for the Hilbert-Schmidt Independence Criterion. Must be one of the four specifications \code{c("gamma", "eigenvalue", "boot", "permutation")}.\code{hsic.method = "gamma"} is the default.}

\item{B}{Number of permutations for separate dCor tests and number of resamples when \code{hsic.method = c("boot", "permutation")} or \code{diff = TRUE}.}

\item{boot.type}{A vector of character strings representing the type of bootstrap confidence intervals. Must be one of the two specifications \code{c("perc", "bca")}.\code{boot.type = "perc"} is the default.}

\item{conf.level}{Confidence level for bootstrap confidence intervals.}

\item{parallelize}{A logical value indicating whether bootstrapping is performed on multiple cores. Only used if \code{diff = TRUE}.}

\item{cores}{A numeric value indicating the number of cores. Only used if \code{parallelize = TRUE}.}

\item{...}{Additional arguments to be passed to the function.}

\item{x}{An object of class \code{cdda.indep}.}

\item{obj}{a \code{cdda.indep} class object.}

\item{stat}{a character indicating the stat of statistic to be plotted with options \code{c("hsic.diff", "dcor.diff", "mi.diff")}.}

\item{ylim}{a numeric vector of length 2 indicating the y-axis limits if \code{NULL}, the function will set the limits automatically.}

\item{cdda.output}{output from \code{cdda.indep} object}

\item{hsic}{logical, default is \code{TRUE}, includes Hilbert-Schmidt Independence Criterion (HSIC) test}

\item{hsic.diff}{logical, default is \code{FALSE}, includes HSIC differences}

\item{dcor}{logical, default is \code{TRUE}, includes Distance Correlation (dCor) test}

\item{dcor.diff}{logical, default is \code{FALSE}, includes dCor differences}

\item{mi.diff}{logical, default is \code{FALSE}, includes Mutual Information (MI) differences}
}
\value{
A list of class \class{cdda.indep} containing the results of CDDA
         independence tests for pre-specified moderator values.

An object of class \code{cdda.indep} with readable OLS coefficients for competing models

A plot of a test statistic result from the \code{cdda.indep} class object.

A summary of test statistic results from the \code{cdda.indep} class object.
}
\description{
\code{cdda.indep} computes CDDA test statistics to
             evaluate asymmetries of predictor-error independence of competing
             conditional models (\code{y \sim x \ast m} vs. \code{x \sim y \ast m}
             with \code{m} being a continuous or categorical moderator).

Displays the output of standard linear model coefficients for competing target and alternative models.

\code{plot} returns test statistic results from the \code{cdda.indep} class object.

\code{summary} returns test statistic results from the \code{cdda.indep} class object.
}
\examples{
set.seed(321)
n <- 700

## --- generate moderator

z <- sort(rnorm(n))
z1 <- z[z <= 0]
z2 <- z[z > 0]

## --- x -> y when z <= 0

x1 <- rchisq(length(z1), df = 4) - 4
e1 <- rchisq(length(z1), df = 3) - 3
y1 <- 0.5 * x1 + e1

## --- y -> x when m z > 0

y2 <- rchisq(length(z2), df = 4) - 4
e2 <- rchisq(length(z2), df = 3) - 3
x2 <- 0.25 * y2 + e2

y <- c(y1, y2); x <- c(x1, x2)

d <- data.frame(x, y, z)

m <- lm(y ~ x * z, data = d)


result <- cdda.indep(m, pred = "x", mod = "z",
                     modval = c(-1, 1), data = d,
                     hetero = TRUE, diff = TRUE,
                     parallelize = TRUE, cores = 2)


print(model)

           plot(result, stat = "hsic.diff").
             summary(result, hetero = FALSE, nlfun = TRUE)
}
\references{
Wiedermann, W., & von Eye, A. (2025). \emph{Direction Dependence Analysis: Foundations and Statistical Methods}. Cambridge, UK: Cambridge University Press.
}
\seealso{
\code{\link{dda.indep}} for an unconditional version.
}
